class XmlProvider
    static member AsyncGetSamples: () -> XmlProvider+Choice[] async
    let f = new Func<_,_>(fun (t:TextReader) -> XmlElement.CreateList(t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "XML" "AnyFeed.xml"), f)

    static member AsyncLoad: uri:string -> XmlProvider+Choice async
    let f = new Func<_,_>(fun (t:TextReader) -> XmlElement.Create(t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntime false @"<RESOLUTION_FOLDER>" "" "XML" uri), f)

    static member GetSamples: () -> XmlProvider+Choice[]
    XmlElement.CreateList(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<RESOLUTION_FOLDER>" "" "XML" "AnyFeed.xml")))

    static member Load: stream:System.IO.Stream -> XmlProvider+Choice
    XmlElement.Create(((new StreamReader(stream)) :> TextReader))

    static member Load: reader:System.IO.TextReader -> XmlProvider+Choice
    XmlElement.Create(reader)

    static member Load: uri:string -> XmlProvider+Choice
    XmlElement.Create(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntime false @"<RESOLUTION_FOLDER>" "" "XML" uri)))

    static member Parse: text:string -> XmlProvider+Choice
    XmlElement.Create(((new StringReader(text)) :> TextReader))


class XmlProvider+Choice : FDR.XmlElement
    new : xElement:System.Xml.Linq.XElement -> XmlProvider+Choice
    XmlElement.Create(xElement)

    member Feed: XmlProvider+Feed option with get
    XmlRuntime.ConvertAsName(this, "{http://www.w3.org/2005/Atom}feed", new Func<_,_>(id)))

    member Rss: XmlProvider+Rss option with get
    XmlRuntime.ConvertAsName(this, "rss", new Func<_,_>(id)))


class XmlProvider+Feed : FDR.XmlElement
    new : xmlns:string -> entry:XmlProvider+Entry -> id:string -> links:XmlProvider+Link2[] -> subtitle:string -> title:string -> updated:System.DateTime -> XmlProvider+Feed
    XmlRuntime.CreateElement("{http://www.w3.org/2005/Atom}feed", 
                             [| ("xmlns",
                                 (xmlns :> obj)) |], 
                             [| ("{http://www.w3.org/2005/Atom}entry",
                                 (entry :> obj))
                                ("{http://www.w3.org/2005/Atom}id",
                                 (id :> obj))
                                ("{http://www.w3.org/2005/Atom}link",
                                 (links :> obj))
                                ("{http://www.w3.org/2005/Atom}subtitle",
                                 (subtitle :> obj))
                                ("{http://www.w3.org/2005/Atom}title",
                                 (title :> obj))
                                ("{http://www.w3.org/2005/Atom}updated",
                                 (updated :> obj)) |])

    new : xElement:System.Xml.Linq.XElement -> XmlProvider+Feed
    XmlElement.Create(xElement)

    member Entry: XmlProvider+Entry with get
    XmlRuntime.GetChild(this, "{http://www.w3.org/2005/Atom}entry")

    member Id: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://www.w3.org/2005/Atom}id"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)

    member Links: XmlProvider+Link2[] with get
    XmlRuntime.ConvertArray(this, "{http://www.w3.org/2005/Atom}link", new Func<_,_>(id)))

    member Subtitle: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://www.w3.org/2005/Atom}subtitle"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)

    member Title: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://www.w3.org/2005/Atom}title"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)

    member Updated: System.DateTime with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://www.w3.org/2005/Atom}updated"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertDateTime("", value), value)

    member Xmlns: string with get
    let value = XmlRuntime.TryGetAttribute(this, "xmlns")
    TextRuntime.GetNonOptionalValue("Attribute xmlns", TextRuntime.ConvertString(value), value)


class XmlProvider+Rss : FDR.XmlElement
    new : version:decimal -> channel:XmlProvider+Channel -> XmlProvider+Rss
    XmlRuntime.CreateElement("rss", 
                             [| ("version",
                                 (version :> obj)) |], 
                             [| ("channel",
                                 (channel :> obj)) |])

    new : xElement:System.Xml.Linq.XElement -> XmlProvider+Rss
    XmlElement.Create(xElement)

    member Channel: XmlProvider+Channel with get
    XmlRuntime.GetChild(this, "channel")

    member Version: decimal with get
    let value = XmlRuntime.TryGetAttribute(this, "version")
    TextRuntime.GetNonOptionalValue("Attribute version", TextRuntime.ConvertDecimal("", value), value)


class XmlProvider+Channel : FDR.XmlElement
    new : description:string -> items:XmlProvider+Item[] -> link:string -> title:string -> XmlProvider+Channel
    XmlRuntime.CreateElement("channel", 
                             [| |], 
                             [| ("description",
                                 (description :> obj))
                                ("item",
                                 (items :> obj))
                                ("link",
                                 (link :> obj))
                                ("title",
                                 (title :> obj)) |])

    new : xElement:System.Xml.Linq.XElement -> XmlProvider+Channel
    XmlElement.Create(xElement)

    member Description: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "description"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)

    member Items: XmlProvider+Item[] with get
    XmlRuntime.ConvertArray(this, "item", new Func<_,_>(id)))

    member Link: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "link"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)

    member Title: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "title"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)


class XmlProvider+Entry : FDR.XmlElement
    new : author:XmlProvider+Author -> id:string -> links:XmlProvider+Link[] -> summary:string -> title:string -> updated:System.DateTime -> XmlProvider+Entry
    XmlRuntime.CreateElement("{http://www.w3.org/2005/Atom}entry", 
                             [| |], 
                             [| ("{http://www.w3.org/2005/Atom}author",
                                 (author :> obj))
                                ("{http://www.w3.org/2005/Atom}id",
                                 (id :> obj))
                                ("{http://www.w3.org/2005/Atom}link",
                                 (links :> obj))
                                ("{http://www.w3.org/2005/Atom}summary",
                                 (summary :> obj))
                                ("{http://www.w3.org/2005/Atom}title",
                                 (title :> obj))
                                ("{http://www.w3.org/2005/Atom}updated",
                                 (updated :> obj)) |])

    new : xElement:System.Xml.Linq.XElement -> XmlProvider+Entry
    XmlElement.Create(xElement)

    member Author: XmlProvider+Author with get
    XmlRuntime.GetChild(this, "{http://www.w3.org/2005/Atom}author")

    member Id: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://www.w3.org/2005/Atom}id"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)

    member Links: XmlProvider+Link[] with get
    XmlRuntime.ConvertArray(this, "{http://www.w3.org/2005/Atom}link", new Func<_,_>(id)))

    member Summary: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://www.w3.org/2005/Atom}summary"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)

    member Title: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://www.w3.org/2005/Atom}title"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)

    member Updated: System.DateTime with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://www.w3.org/2005/Atom}updated"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertDateTime("", value), value)


class XmlProvider+Link2 : FDR.XmlElement
    new : href:string -> rel:string option -> XmlProvider+Link2
    XmlRuntime.CreateElement("{http://www.w3.org/2005/Atom}link", 
                             [| ("href",
                                 (href :> obj))
                                ("rel",
                                 (rel :> obj)) |], 
                             [| |])

    new : xElement:System.Xml.Linq.XElement -> XmlProvider+Link2
    XmlElement.Create(xElement)

    member Href: string with get
    let value = XmlRuntime.TryGetAttribute(this, "href")
    TextRuntime.GetNonOptionalValue("Attribute href", TextRuntime.ConvertString(value), value)

    member Rel: string option with get
    TextRuntime.ConvertString(XmlRuntime.TryGetAttribute(this, "rel"))


class XmlProvider+Author : FDR.XmlElement
    new : email:string -> name:string -> XmlProvider+Author
    XmlRuntime.CreateElement("{http://www.w3.org/2005/Atom}author", 
                             [| |], 
                             [| ("{http://www.w3.org/2005/Atom}email",
                                 (email :> obj))
                                ("{http://www.w3.org/2005/Atom}name",
                                 (name :> obj)) |])

    new : xElement:System.Xml.Linq.XElement -> XmlProvider+Author
    XmlElement.Create(xElement)

    member Email: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://www.w3.org/2005/Atom}email"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)

    member Name: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://www.w3.org/2005/Atom}name"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)


class XmlProvider+Item : FDR.XmlElement
    new : description:string -> link:string -> title:string -> XmlProvider+Item
    XmlRuntime.CreateElement("item", 
                             [| |], 
                             [| ("description",
                                 (description :> obj))
                                ("link",
                                 (link :> obj))
                                ("title",
                                 (title :> obj)) |])

    new : xElement:System.Xml.Linq.XElement -> XmlProvider+Item
    XmlElement.Create(xElement)

    member Description: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "description"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)

    member Link: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "link"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)

    member Title: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "title"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)


class XmlProvider+Link : FDR.XmlElement
    new : href:string -> rel:string option -> type:string option -> XmlProvider+Link
    XmlRuntime.CreateElement("{http://www.w3.org/2005/Atom}link", 
                             [| ("href",
                                 (href :> obj))
                                ("rel",
                                 (rel :> obj))
                                ("type",
                                 (type :> obj)) |], 
                             [| |])

    new : xElement:System.Xml.Linq.XElement -> XmlProvider+Link
    XmlElement.Create(xElement)

    member Href: string with get
    let value = XmlRuntime.TryGetAttribute(this, "href")
    TextRuntime.GetNonOptionalValue("Attribute href", TextRuntime.ConvertString(value), value)

    member Rel: string option with get
    TextRuntime.ConvertString(XmlRuntime.TryGetAttribute(this, "rel"))

    member Type: string option with get
    TextRuntime.ConvertString(XmlRuntime.TryGetAttribute(this, "type"))


